'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getValidateError = getValidateError;
exports.getIsValid = getIsValid;
exports.default = validate;

var _mobx = require('mobx');

var _camelcase = require('camelcase');

var _camelcase2 = _interopRequireDefault(_camelcase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by Yun on 2016-12-10.
 */

function defineComputedProperty(target, name, descriptor) {
  Object.defineProperty(target, name, descriptor);
  (0, _mobx.computed)(target, name, descriptor);
}

function getValidateError() {
  var _this = this;

  return this.constructor.__validateFields.find(function (key) {
    return _this[key];
  });
}

function getIsValid() {
  return !this.validateError;
}

function validate(reg, msg) {
  var test = reg.test ? function (value) {
    return reg.test(value) ? undefined : msg || 'ValidationError';
  } : reg;

  return function (target, name, args) {
    var validateName = (0, _camelcase2.default)('validateError', name);
    var descriptor = {
      configurable: true,
      enumerable: false,
      get: function getter() {
        return test(this[name], this);
      }
    };

    defineComputedProperty(target, validateName, descriptor);

    var clazz = target.constructor;

    if (clazz.hasOwnProperty('__validateFields')) {
      clazz.__validateFields.push(validateName);
    } else {
      Object.defineProperty(clazz, '__validateFields', {
        configurable: true,
        enumerable: false,
        value: [validateName]
      });
    }

    if (!target.hasOwnProperty('validateError')) {
      defineComputedProperty(target, 'validateError', {
        configurable: true,
        enumerable: false,
        get: getValidateError
      });
    }
    if (!target.hasOwnProperty('isValid')) {
      defineComputedProperty(target, 'isValid', {
        configurable: true,
        enumerable: false,
        get: getIsValid
      });
    }
  };
}